// Width of one character
#define SCREEN_CHARACTER_WIDTH 5

// Map of ascii characters, starting from character 32 (the first visible one perhaps?)
uint8_t screenAsciiMaps[][SCREEN_CHARACTER_WIDTH] = {
{0b0000000,0b0000000,0b0000000,0b0000000,0b0000000},
{0b0000000,0b0000000,0b1011111,0b0000000,0b0000000},
{0b0000000,0b0000011,0b0000000,0b0000011,0b0000000},
{0b0010100,0b0111110,0b0010100,0b0111110,0b0010100},
{0b0001100,0b0101010,0b1101011,0b0101010,0b0011000},
{0b0100110,0b0010110,0b0001000,0b0110100,0b0110010},
{0b1110110,0b1001001,0b1010110,0b0100000,0b1010000},
{0b0000000,0b0000000,0b0000011,0b0000000,0b0000000},
{0b0000000,0b0000000,0b0111110,0b1000001,0b0000000},
{0b0000000,0b1000001,0b0111110,0b0000000,0b0000000},
{0b0001000,0b0101010,0b0011100,0b0101010,0b0001000},
{0b0001000,0b0001000,0b0111110,0b0001000,0b0001000},
{0b0000000,0b1000000,0b0100000,0b0000000,0b0000000},
{0b0001000,0b0001000,0b0001000,0b0001000,0b0000000},
{0b0000000,0b1000000,0b0000000,0b0000000,0b0000000},
{0b0100000,0b0010000,0b0001000,0b0000100,0b0000010},
{0b0111110,0b1010001,0b1001001,0b1000101,0b0111110},
{0b0000000,0b1000010,0b1111111,0b1000000,0b0000000},
{0b1100010,0b1010001,0b1001001,0b1001001,0b1000110},
{0b0100001,0b1001001,0b1001101,0b1001011,0b0110001},
{0b0011000,0b0010100,0b0010010,0b1111111,0b0010000},
{0b0100111,0b1000101,0b1000101,0b1000101,0b0111001},
{0b0111100,0b1001010,0b1001001,0b1001001,0b0110000},
{0b0000001,0b1110001,0b0001001,0b0000101,0b0000011},
{0b0111010,0b1000101,0b1000101,0b1000101,0b0111010},
{0b0000110,0b1001001,0b1001001,0b0101001,0b0011110},
{0b0000000,0b1000100,0b0000000,0b0000000,0b0000000},
{0b0000000,0b1000000,0b0100100,0b0000000,0b0000000},
{0b0000000,0b0001000,0b0010100,0b0100010,0b0000000},
{0b0010100,0b0010100,0b0010100,0b0010100,0b0000000},
{0b0000000,0b0100010,0b0010100,0b0001000,0b0000000},
{0b0000010,0b0000001,0b1010001,0b0001001,0b0000110},
{0b0111110,0b1000001,0b1011101,0b1010101,0b1011110},
{0b1111100,0b0010010,0b0010001,0b0010010,0b1111100},
{0b1111111,0b1000101,0b1000101,0b1000101,0b0111010},
{0b0111110,0b1000001,0b1000001,0b1000001,0b0100010},
{0b1111111,0b1000001,0b1000001,0b1000001,0b0111110},
{0b1111111,0b1001001,0b1001001,0b1001001,0b1000011},
{0b1111111,0b0001001,0b0001001,0b0001001,0b0000011},
{0b0111110,0b1000001,0b1001001,0b0101001,0b1111010},
{0b1111111,0b0001000,0b0001000,0b0001000,0b1111111},
{0b0000000,0b1000001,0b1111111,0b1000001,0b0000000},
{0b0100000,0b1000001,0b1000001,0b0111111,0b0000001},
{0b1111111,0b0000100,0b0000100,0b0001010,0b1110001},
{0b1111111,0b1000000,0b1000000,0b1000000,0b1100000},
{0b1111111,0b0000010,0b0001100,0b0000010,0b1111111},
{0b1111111,0b0000100,0b0001000,0b0010000,0b1111111},
{0b0111110,0b1000001,0b1000001,0b1000001,0b0111110},
{0b1111111,0b0001001,0b0001001,0b0001001,0b0000110},
{0b0111110,0b1000001,0b1010001,0b0100001,0b1011110},
{0b1111111,0b0001001,0b0011001,0b0101001,0b1000110},
{0b1000110,0b1001001,0b1001001,0b1001011,0b0110000},
{0b0000011,0b0000001,0b1111111,0b0000001,0b0000011},
{0b0111111,0b1000000,0b1000000,0b1000000,0b0111111},
{0b0001111,0b0110000,0b1000000,0b0110000,0b0001111},
{0b0111111,0b1000000,0b0111000,0b1000000,0b0111111},
{0b1100011,0b0010100,0b0001000,0b0010100,0b1100011},
{0b0000111,0b1001000,0b1110000,0b1001000,0b0000111},
{0b1100011,0b1010001,0b1001001,0b1000101,0b1100011},
{0b0000000,0b0000000,0b1111111,0b1000001,0b0000000},
{0b0000010,0b0000100,0b0001000,0b0010000,0b0100000},
{0b0000000,0b1000001,0b1111111,0b0000000,0b0000000},
{0b0000100,0b0000010,0b0000001,0b0000010,0b0000100},
{0b1000000,0b1000000,0b1000000,0b1000000,0b1000000},
{0b0000000,0b0000001,0b0000010,0b0000100,0b0000000},
{0b0110000,0b1001010,0b1001010,0b1001010,0b1111100},
{0b1111111,0b1001000,0b1001000,0b1001000,0b0110000},
{0b0111000,0b1000100,0b1000100,0b1000100,0b0101000},
{0b0110000,0b1001000,0b1001000,0b1001000,0b1111111},
{0b0111000,0b1010100,0b1010100,0b1010100,0b0011000},
{0b0010000,0b1111110,0b0010001,0b0000110,0b0000000},
{0b0100000,0b1010110,0b1011010,0b1010110,0b0100001},
{0b1111111,0b0010000,0b0001000,0b0001000,0b1110000},
{0b0000000,0b1000100,0b1111101,0b1000000,0b0000000},
{0b1000000,0b1000100,0b0111101,0b0000100,0b0000000},
{0b0000001,0b1111111,0b0001000,0b0010100,0b1100010},
{0b0000000,0b1000001,0b1111111,0b1000000,0b0000000},
{0b1111100,0b0000100,0b1111000,0b0000100,0b1111000},
{0b1111100,0b0001000,0b0000100,0b0000100,0b1111000},
{0b0111000,0b1000100,0b1000100,0b1000100,0b0111000},
{0b1111100,0b0100100,0b0100100,0b0100100,0b0011000},
{0b0011000,0b0100100,0b0100100,0b0100100,0b1111100},
{0b1111100,0b0001000,0b0000100,0b0000100,0b0000000},
{0b1001000,0b1010100,0b1010100,0b1010100,0b0100000},
{0b0000100,0b0111111,0b1000100,0b1000000,0b0100000},
{0b0111100,0b1000000,0b1000000,0b0100000,0b1111100},
{0b0001100,0b0110000,0b1000000,0b0110000,0b0001100},
{0b0111100,0b1000000,0b0111000,0b1000000,0b0111100},
{0b1000100,0b0101000,0b0010000,0b0101000,0b1000100},
{0b0001100,0b0010000,0b1010000,0b1010000,0b0111100},
{0b1000100,0b1100100,0b1010100,0b1001100,0b1000100},
{0b0000000,0b0001000,0b1110111,0b1000001,0b0000000},
{0b0000000,0b0000000,0b1111111,0b0000000,0b0000000},
{0b0000000,0b1000001,0b1110111,0b0001000,0b0000000},
{0b0000110,0b0000001,0b0000010,0b0000100,0b0000011},
{0b0111110,0b1101011,0b1101111,0b1101011,0b0101110}
};

uint8_t inverted[5];

uint8_t * screenInvertedAsciiMap(uint8_t character) {
    uint8_t * original = screenAsciiMaps[character];

    for (int i = 0; i < SCREEN_CHARACTER_WIDTH; i++) { 
        uint8_t originalColumn = original[i];
        inverted[i] =
            ((0x01 & originalColumn) ? 0x80 : 0) |
            ((0x02 & originalColumn) ? 0x40 : 0) |
            ((0x04 & originalColumn) ? 0x20 : 0) |
            ((0x08 & originalColumn) ? 0x10 : 0) |
            ((0x10 & originalColumn) ? 0x08 : 0) |
            ((0x20 & originalColumn) ? 0x04 : 0) |
            ((0x40 & originalColumn) ? 0x02 : 0) |
            ((0x80 & originalColumn) ? 0x01 : 0)
        ;
   }

   return inverted;
}
